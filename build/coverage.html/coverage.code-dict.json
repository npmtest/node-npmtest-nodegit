{"/home/travis/build/npmtest/node-npmtest-nodegit/test.js":"/* istanbul instrument in package npmtest_nodegit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-nodegit/lib.npmtest_nodegit.js":"/* istanbul instrument in package npmtest_nodegit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_nodegit = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_nodegit = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-nodegit/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-nodegit && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_nodegit */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_nodegit\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught.stack);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_nodegit.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_nodegit.rollup.js'] =\n            local.assetsDict['/assets.npmtest_nodegit.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_nodegit.__dirname +\n                    '/lib.npmtest_nodegit.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-nodegit/nodegit/dist/nodegit.js":"\"use strict\";\n\n// This is a generated file, modify: generate/templates/templates/nodegit.js\n\nvar promisify = require(\"promisify-node\");\nvar rawApi;\n\n// Attempt to load the production release first, if it fails fall back to the\n// debug release.\ntry {\n  rawApi = require(\"../build/Release/nodegit.node\");\n} catch (ex) {\n  /* istanbul ignore next */\n  if (ex.code !== \"MODULE_NOT_FOUND\") {\n    throw ex;\n  }\n\n  rawApi = require(\"../build/Debug/nodegit.node\");\n}\n\n// Native methods do not return an identifiable function, so we\n// have to override them here\n/* jshint ignore:start */\nvar _AnnotatedCommit = rawApi.AnnotatedCommit;\n\nvar _AnnotatedCommit_fromFetchhead = _AnnotatedCommit.fromFetchhead;\n_AnnotatedCommit.fromFetchhead = promisify(_AnnotatedCommit_fromFetchhead);\n\nvar _AnnotatedCommit_fromRef = _AnnotatedCommit.fromRef;\n_AnnotatedCommit.fromRef = promisify(_AnnotatedCommit_fromRef);\n\nvar _AnnotatedCommit_fromRevspec = _AnnotatedCommit.fromRevspec;\n_AnnotatedCommit.fromRevspec = promisify(_AnnotatedCommit_fromRevspec);\n\nvar _AnnotatedCommit_lookup = _AnnotatedCommit.lookup;\n_AnnotatedCommit.lookup = promisify(_AnnotatedCommit_lookup);\n\nvar _Attr = rawApi.Attr;\n\nvar _Attr_get = _Attr.get;\n_Attr.get = promisify(_Attr_get);\n\nvar _Blame = rawApi.Blame;\n\nvar _Blame_buffer = _Blame.prototype.buffer;\n_Blame.prototype.buffer = promisify(_Blame_buffer);\n\nvar _Blame_file = _Blame.file;\n_Blame.file = promisify(_Blame_file);\n\nvar _Blob = rawApi.Blob;\n\nvar _Blob_createFromStream = _Blob.createFromStream;\n_Blob.createFromStream = promisify(_Blob_createFromStream);\n\nvar _Blob_createFromstreamCommit = _Blob.createFromstreamCommit;\n_Blob.createFromstreamCommit = promisify(_Blob_createFromstreamCommit);\n\nvar _Blob_dup = _Blob.prototype.dup;\n_Blob.prototype.dup = promisify(_Blob_dup);\n\nvar _Blob_lookup = _Blob.lookup;\n_Blob.lookup = promisify(_Blob_lookup);\n\nvar _Blob_lookupPrefix = _Blob.lookupPrefix;\n_Blob.lookupPrefix = promisify(_Blob_lookupPrefix);\n\nvar _Branch = rawApi.Branch;\n\nvar _Branch_create = _Branch.create;\n_Branch.create = promisify(_Branch_create);\n\nvar _Branch_createFromAnnotated = _Branch.createFromAnnotated;\n_Branch.createFromAnnotated = promisify(_Branch_createFromAnnotated);\n\nvar _Branch_iteratorNew = _Branch.iteratorNew;\n_Branch.iteratorNew = promisify(_Branch_iteratorNew);\n\nvar _Branch_lookup = _Branch.lookup;\n_Branch.lookup = promisify(_Branch_lookup);\n\nvar _Branch_move = _Branch.move;\n_Branch.move = promisify(_Branch_move);\n\nvar _Branch_name = _Branch.name;\n_Branch.name = promisify(_Branch_name);\n\nvar _Branch_setUpstream = _Branch.setUpstream;\n_Branch.setUpstream = promisify(_Branch_setUpstream);\n\nvar _Branch_upstream = _Branch.upstream;\n_Branch.upstream = promisify(_Branch_upstream);\n\nvar _Buf = rawApi.Buf;\n\nvar _Buf_grow = _Buf.prototype.grow;\n_Buf.prototype.grow = promisify(_Buf_grow);\n\nvar _Buf_set = _Buf.prototype.set;\n_Buf.prototype.set = promisify(_Buf_set);\n\nvar _Checkout = rawApi.Checkout;\n\nvar _Checkout_head = _Checkout.head;\n_Checkout.head = promisify(_Checkout_head);\n\nvar _Checkout_index = _Checkout.index;\n_Checkout.index = promisify(_Checkout_index);\n\nvar _Checkout_tree = _Checkout.tree;\n_Checkout.tree = promisify(_Checkout_tree);\n\nvar _Cherrypick = rawApi.Cherrypick;\n\nvar _Cherrypick_cherrypick = _Cherrypick.cherrypick;\n_Cherrypick.cherrypick = promisify(_Cherrypick_cherrypick);\n\nvar _Cherrypick_commit = _Cherrypick.commit;\n_Cherrypick.commit = promisify(_Cherrypick_commit);\n\nvar _Clone = rawApi.Clone;\n\nvar _Clone_clone = _Clone.clone;\n_Clone.clone = promisify(_Clone_clone);\n\nvar _Commit = rawApi.Commit;\n\nvar _Commit_create = _Commit.create;\n_Commit.create = promisify(_Commit_create);\n\nvar _Commit_createWithSignature = _Commit.createWithSignature;\n_Commit.createWithSignature = promisify(_Commit_createWithSignature);\n\nvar _Commit_dup = _Commit.prototype.dup;\n_Commit.prototype.dup = promisify(_Commit_dup);\n\nvar _Commit_headerField = _Commit.prototype.headerField;\n_Commit.prototype.headerField = promisify(_Commit_headerField);\n\nvar _Commit_lookup = _Commit.lookup;\n_Commit.lookup = promisify(_Commit_lookup);\n\nvar _Commit_lookupPrefix = _Commit.lookupPrefix;\n_Commit.lookupPrefix = promisify(_Commit_lookupPrefix);\n\nvar _Commit_nthGenAncestor = _Commit.prototype.nthGenAncestor;\n_Commit.prototype.nthGenAncestor = promisify(_Commit_nthGenAncestor);\n\nvar _Commit_parent = _Commit.prototype.parent;\n_Commit.prototype.parent = promisify(_Commit_parent);\n\nvar _Config = rawApi.Config;\n\nvar _Config_findProgramdata = _Config.findProgramdata;\n_Config.findProgramdata = promisify(_Config_findProgramdata);\n\nvar _Config_getStringBuf = _Config.prototype.getStringBuf;\n_Config.prototype.getStringBuf = promisify(_Config_getStringBuf);\n\nvar _Config_openDefault = _Config.openDefault;\n_Config.openDefault = promisify(_Config_openDefault);\n\nvar _Config_setString = _Config.prototype.setString;\n_Config.prototype.setString = promisify(_Config_setString);\n\nvar _Config_snapshot = _Config.prototype.snapshot;\n_Config.prototype.snapshot = promisify(_Config_snapshot);\n\nvar _Cred = rawApi.Cred;\n\nvar _Cred_sshKeyMemoryNew = _Cred.sshKeyMemoryNew;\n_Cred.sshKeyMemoryNew = promisify(_Cred_sshKeyMemoryNew);\n\nvar _Cred_usernameNew = _Cred.usernameNew;\n_Cred.usernameNew = promisify(_Cred_usernameNew);\n\nvar _Diff = rawApi.Diff;\n\nvar _Diff_blobToBuffer = _Diff.blobToBuffer;\n_Diff.blobToBuffer = promisify(_Diff_blobToBuffer);\n\nvar _Diff_findSimilar = _Diff.prototype.findSimilar;\n_Diff.prototype.findSimilar = promisify(_Diff_findSimilar);\n\nvar _Diff_fromBuffer = _Diff.fromBuffer;\n_Diff.fromBuffer = promisify(_Diff_fromBuffer);\n\nvar _Diff_getPerfdata = _Diff.prototype.getPerfdata;\n_Diff.prototype.getPerfdata = promisify(_Diff_getPerfdata);\n\nvar _Diff_indexToIndex = _Diff.indexToIndex;\n_Diff.indexToIndex = promisify(_Diff_indexToIndex);\n\nvar _Diff_indexToWorkdir = _Diff.indexToWorkdir;\n_Diff.indexToWorkdir = promisify(_Diff_indexToWorkdir);\n\nvar _Diff_merge = _Diff.prototype.merge;\n_Diff.prototype.merge = promisify(_Diff_merge);\n\nvar _Diff_toBuf = _Diff.prototype.toBuf;\n_Diff.prototype.toBuf = promisify(_Diff_toBuf);\n\nvar _Diff_treeToIndex = _Diff.treeToIndex;\n_Diff.treeToIndex = promisify(_Diff_treeToIndex);\n\nvar _Diff_treeToTree = _Diff.treeToTree;\n_Diff.treeToTree = promisify(_Diff_treeToTree);\n\nvar _Diff_treeToWorkdir = _Diff.treeToWorkdir;\n_Diff.treeToWorkdir = promisify(_Diff_treeToWorkdir);\n\nvar _Diff_treeToWorkdirWithIndex = _Diff.treeToWorkdirWithIndex;\n_Diff.treeToWorkdirWithIndex = promisify(_Diff_treeToWorkdirWithIndex);\n\nvar _Fetch = rawApi.Fetch;\nvar _Filter = rawApi.Filter;\n\nvar _Filter_listNew = _Filter.listNew;\n_Filter.listNew = promisify(_Filter_listNew);\n\nvar _Giterr = rawApi.Giterr;\nvar _Graph = rawApi.Graph;\n\nvar _Graph_aheadBehind = _Graph.aheadBehind;\n_Graph.aheadBehind = promisify(_Graph_aheadBehind);\n\nvar _Graph_descendantOf = _Graph.descendantOf;\n_Graph.descendantOf = promisify(_Graph_descendantOf);\n\nvar _Hashsig = rawApi.Hashsig;\n\nvar _Hashsig_create = _Hashsig.create;\n_Hashsig.create = promisify(_Hashsig_create);\n\nvar _Hashsig_createFromFile = _Hashsig.createFromFile;\n_Hashsig.createFromFile = promisify(_Hashsig_createFromFile);\n\nvar _Ignore = rawApi.Ignore;\n\nvar _Ignore_pathIsIgnored = _Ignore.pathIsIgnored;\n_Ignore.pathIsIgnored = promisify(_Ignore_pathIsIgnored);\n\nvar _Index = rawApi.Index;\n\nvar _Index_add = _Index.prototype.add;\n_Index.prototype.add = promisify(_Index_add);\n\nvar _Index_addAll = _Index.prototype.addAll;\n_Index.prototype.addAll = promisify(_Index_addAll);\n\nvar _Index_addByPath = _Index.prototype.addByPath;\n_Index.prototype.addByPath = promisify(_Index_addByPath);\n\nvar _Index_clear = _Index.prototype.clear;\n_Index.prototype.clear = promisify(_Index_clear);\n\nvar _Index_conflictAdd = _Index.prototype.conflictAdd;\n_Index.prototype.conflictAdd = promisify(_Index_conflictAdd);\n\nvar _Index_conflictCleanup = _Index.prototype.conflictCleanup;\n_Index.prototype.conflictCleanup = promisify(_Index_conflictCleanup);\n\nvar _Index_conflictGet = _Index.prototype.conflictGet;\n_Index.prototype.conflictGet = promisify(_Index_conflictGet);\n\nvar _Index_conflictRemove = _Index.prototype.conflictRemove;\n_Index.prototype.conflictRemove = promisify(_Index_conflictRemove);\n\nvar _Index_open = _Index.open;\n_Index.open = promisify(_Index_open);\n\nvar _Index_read = _Index.prototype.read;\n_Index.prototype.read = promisify(_Index_read);\n\nvar _Index_readTree = _Index.prototype.readTree;\n_Index.prototype.readTree = promisify(_Index_readTree);\n\nvar _Index_remove = _Index.prototype.remove;\n_Index.prototype.remove = promisify(_Index_remove);\n\nvar _Index_removeAll = _Index.prototype.removeAll;\n_Index.prototype.removeAll = promisify(_Index_removeAll);\n\nvar _Index_removeByPath = _Index.prototype.removeByPath;\n_Index.prototype.removeByPath = promisify(_Index_removeByPath);\n\nvar _Index_removeDirectory = _Index.prototype.removeDirectory;\n_Index.prototype.removeDirectory = promisify(_Index_removeDirectory);\n\nvar _Index_updateAll = _Index.prototype.updateAll;\n_Index.prototype.updateAll = promisify(_Index_updateAll);\n\nvar _Index_write = _Index.prototype.write;\n_Index.prototype.write = promisify(_Index_write);\n\nvar _Index_writeTree = _Index.prototype.writeTree;\n_Index.prototype.writeTree = promisify(_Index_writeTree);\n\nvar _Index_writeTreeTo = _Index.prototype.writeTreeTo;\n_Index.prototype.writeTreeTo = promisify(_Index_writeTreeTo);\n\nvar _Indexer = rawApi.Indexer;\nvar _Libgit2 = rawApi.Libgit2;\nvar _Merge = rawApi.Merge;\n\nvar _Merge_base = _Merge.base;\n_Merge.base = promisify(_Merge_base);\n\nvar _Merge_bases = _Merge.bases;\n_Merge.bases = promisify(_Merge_bases);\n\nvar _Merge_commits = _Merge.commits;\n_Merge.commits = promisify(_Merge_commits);\n\nvar _Merge_trees = _Merge.trees;\n_Merge.trees = promisify(_Merge_trees);\n\nvar _Note = rawApi.Note;\n\nvar _Note_create = _Note.create;\n_Note.create = promisify(_Note_create);\n\nvar _Note_foreach = _Note.foreach;\n_Note.foreach = promisify(_Note_foreach);\n\nvar _Note_iteratorNew = _Note.iteratorNew;\n_Note.iteratorNew = promisify(_Note_iteratorNew);\n\nvar _Note_read = _Note.read;\n_Note.read = promisify(_Note_read);\n\nvar _Note_remove = _Note.remove;\n_Note.remove = promisify(_Note_remove);\n\nvar _Object = rawApi.Object;\n\nvar _Object_dup = _Object.prototype.dup;\n_Object.prototype.dup = promisify(_Object_dup);\n\nvar _Object_lookup = _Object.lookup;\n_Object.lookup = promisify(_Object_lookup);\n\nvar _Object_lookupByPath = _Object.prototype.lookupByPath;\n_Object.prototype.lookupByPath = promisify(_Object_lookupByPath);\n\nvar _Object_lookupPrefix = _Object.lookupPrefix;\n_Object.lookupPrefix = promisify(_Object_lookupPrefix);\n\nvar _Object_peel = _Object.prototype.peel;\n_Object.prototype.peel = promisify(_Object_peel);\n\nvar _Object_shortId = _Object.prototype.shortId;\n_Object.prototype.shortId = promisify(_Object_shortId);\n\nvar _Odb = rawApi.Odb;\n\nvar _Odb_open = _Odb.open;\n_Odb.open = promisify(_Odb_open);\n\nvar _Odb_read = _Odb.prototype.read;\n_Odb.prototype.read = promisify(_Odb_read);\n\nvar _Odb_write = _Odb.prototype.write;\n_Odb.prototype.write = promisify(_Odb_write);\n\nvar _OdbObject = rawApi.OdbObject;\n\nvar _OdbObject_dup = _OdbObject.prototype.dup;\n_OdbObject.prototype.dup = promisify(_OdbObject_dup);\n\nvar _Oid = rawApi.Oid;\nvar _Oidarray = rawApi.Oidarray;\nvar _Openssl = rawApi.Openssl;\nvar _Packbuilder = rawApi.Packbuilder;\nvar _Patch = rawApi.Patch;\n\nvar _Patch_fromBlobAndBuffer = _Patch.fromBlobAndBuffer;\n_Patch.fromBlobAndBuffer = promisify(_Patch_fromBlobAndBuffer);\n\nvar _Patch_fromBlobs = _Patch.fromBlobs;\n_Patch.fromBlobs = promisify(_Patch_fromBlobs);\n\nvar _Patch_fromDiff = _Patch.fromDiff;\n_Patch.fromDiff = promisify(_Patch_fromDiff);\n\nvar _Patch_getHunk = _Patch.prototype.getHunk;\n_Patch.prototype.getHunk = promisify(_Patch_getHunk);\n\nvar _Patch_getLineInHunk = _Patch.prototype.getLineInHunk;\n_Patch.prototype.getLineInHunk = promisify(_Patch_getLineInHunk);\n\nvar _Patch_convenientFromDiff = _Patch.convenientFromDiff;\n_Patch.convenientFromDiff = promisify(_Patch_convenientFromDiff);\n\nvar _Pathspec = rawApi.Pathspec;\n\nvar _Pathspec_matchDiff = _Pathspec.prototype.matchDiff;\n_Pathspec.prototype.matchDiff = promisify(_Pathspec_matchDiff);\n\nvar _Pathspec_matchIndex = _Pathspec.prototype.matchIndex;\n_Pathspec.prototype.matchIndex = promisify(_Pathspec_matchIndex);\n\nvar _Pathspec_matchTree = _Pathspec.prototype.matchTree;\n_Pathspec.prototype.matchTree = promisify(_Pathspec_matchTree);\n\nvar _Pathspec_matchWorkdir = _Pathspec.prototype.matchWorkdir;\n_Pathspec.prototype.matchWorkdir = promisify(_Pathspec_matchWorkdir);\n\nvar _Proxy = rawApi.Proxy;\nvar _Push = rawApi.Push;\nvar _Rebase = rawApi.Rebase;\n\nvar _Rebase_init = _Rebase.init;\n_Rebase.init = promisify(_Rebase_init);\n\nvar _Rebase_next = _Rebase.prototype.next;\n_Rebase.prototype.next = promisify(_Rebase_next);\n\nvar _Rebase_open = _Rebase.open;\n_Rebase.open = promisify(_Rebase_open);\n\nvar _Refdb = rawApi.Refdb;\n\nvar _Refdb_open = _Refdb.open;\n_Refdb.open = promisify(_Refdb_open);\n\nvar _Reference = rawApi.Reference;\n\nvar _Reference_create = _Reference.create;\n_Reference.create = promisify(_Reference_create);\n\nvar _Reference_createMatching = _Reference.createMatching;\n_Reference.createMatching = promisify(_Reference_createMatching);\n\nvar _Reference_dup = _Reference.prototype.dup;\n_Reference.prototype.dup = promisify(_Reference_dup);\n\nvar _Reference_dwim = _Reference.dwim;\n_Reference.dwim = promisify(_Reference_dwim);\n\nvar _Reference_list = _Reference.list;\n_Reference.list = promisify(_Reference_list);\n\nvar _Reference_lookup = _Reference.lookup;\n_Reference.lookup = promisify(_Reference_lookup);\n\nvar _Reference_nameToId = _Reference.nameToId;\n_Reference.nameToId = promisify(_Reference_nameToId);\n\nvar _Reference_peel = _Reference.prototype.peel;\n_Reference.prototype.peel = promisify(_Reference_peel);\n\nvar _Reference_rename = _Reference.prototype.rename;\n_Reference.prototype.rename = promisify(_Reference_rename);\n\nvar _Reference_resolve = _Reference.prototype.resolve;\n_Reference.prototype.resolve = promisify(_Reference_resolve);\n\nvar _Reference_setTarget = _Reference.prototype.setTarget;\n_Reference.prototype.setTarget = promisify(_Reference_setTarget);\n\nvar _Reference_symbolicCreate = _Reference.symbolicCreate;\n_Reference.symbolicCreate = promisify(_Reference_symbolicCreate);\n\nvar _Reference_symbolicCreateMatching = _Reference.symbolicCreateMatching;\n_Reference.symbolicCreateMatching = promisify(_Reference_symbolicCreateMatching);\n\nvar _Reference_symbolicSetTarget = _Reference.prototype.symbolicSetTarget;\n_Reference.prototype.symbolicSetTarget = promisify(_Reference_symbolicSetTarget);\n\nvar _Reflog = rawApi.Reflog;\n\nvar _Reflog_read = _Reflog.read;\n_Reflog.read = promisify(_Reflog_read);\n\nvar _ReflogEntry = rawApi.ReflogEntry;\nvar _Refspec = rawApi.Refspec;\nvar _Remote = rawApi.Remote;\n\nvar _Remote_connect = _Remote.prototype.connect;\n_Remote.prototype.connect = promisify(_Remote_connect);\n\nvar _Remote_create = _Remote.create;\n_Remote.create = promisify(_Remote_create);\n\nvar _Remote_createAnonymous = _Remote.createAnonymous;\n_Remote.createAnonymous = promisify(_Remote_createAnonymous);\n\nvar _Remote_createWithFetchspec = _Remote.createWithFetchspec;\n_Remote.createWithFetchspec = promisify(_Remote_createWithFetchspec);\n\nvar _Remote_defaultBranch = _Remote.prototype.defaultBranch;\n_Remote.prototype.defaultBranch = promisify(_Remote_defaultBranch);\n\nvar _Remote_delete = _Remote.delete;\n_Remote.delete = promisify(_Remote_delete);\n\nvar _Remote_disconnect = _Remote.prototype.disconnect;\n_Remote.prototype.disconnect = promisify(_Remote_disconnect);\n\nvar _Remote_download = _Remote.prototype.download;\n_Remote.prototype.download = promisify(_Remote_download);\n\nvar _Remote_dup = _Remote.prototype.dup;\n_Remote.prototype.dup = promisify(_Remote_dup);\n\nvar _Remote_fetch = _Remote.prototype.fetch;\n_Remote.prototype.fetch = promisify(_Remote_fetch);\n\nvar _Remote_getFetchRefspecs = _Remote.prototype.getFetchRefspecs;\n_Remote.prototype.getFetchRefspecs = promisify(_Remote_getFetchRefspecs);\n\nvar _Remote_getPushRefspecs = _Remote.prototype.getPushRefspecs;\n_Remote.prototype.getPushRefspecs = promisify(_Remote_getPushRefspecs);\n\nvar _Remote_list = _Remote.list;\n_Remote.list = promisify(_Remote_list);\n\nvar _Remote_lookup = _Remote.lookup;\n_Remote.lookup = promisify(_Remote_lookup);\n\nvar _Remote_push = _Remote.prototype.push;\n_Remote.prototype.push = promisify(_Remote_push);\n\nvar _Remote_referenceList = _Remote.prototype.referenceList;\n_Remote.prototype.referenceList = promisify(_Remote_referenceList);\n\nvar _Repository = rawApi.Repository;\n\nvar _Repository_config = _Repository.prototype.config;\n_Repository.prototype.config = promisify(_Repository_config);\n\nvar _Repository_configSnapshot = _Repository.prototype.configSnapshot;\n_Repository.prototype.configSnapshot = promisify(_Repository_configSnapshot);\n\nvar _Repository_discover = _Repository.discover;\n_Repository.discover = promisify(_Repository_discover);\n\nvar _Repository_fetchheadForeach = _Repository.prototype.fetchheadForeach;\n_Repository.prototype.fetchheadForeach = promisify(_Repository_fetchheadForeach);\n\nvar _Repository_head = _Repository.prototype.head;\n_Repository.prototype.head = promisify(_Repository_head);\n\nvar _Repository_index = _Repository.prototype.index;\n_Repository.prototype.index = promisify(_Repository_index);\n\nvar _Repository_init = _Repository.init;\n_Repository.init = promisify(_Repository_init);\n\nvar _Repository_initExt = _Repository.initExt;\n_Repository.initExt = promisify(_Repository_initExt);\n\nvar _Repository_mergeheadForeach = _Repository.prototype.mergeheadForeach;\n_Repository.prototype.mergeheadForeach = promisify(_Repository_mergeheadForeach);\n\nvar _Repository_odb = _Repository.prototype.odb;\n_Repository.prototype.odb = promisify(_Repository_odb);\n\nvar _Repository_open = _Repository.open;\n_Repository.open = promisify(_Repository_open);\n\nvar _Repository_openBare = _Repository.openBare;\n_Repository.openBare = promisify(_Repository_openBare);\n\nvar _Repository_openExt = _Repository.openExt;\n_Repository.openExt = promisify(_Repository_openExt);\n\nvar _Repository_refdb = _Repository.prototype.refdb;\n_Repository.prototype.refdb = promisify(_Repository_refdb);\n\nvar _Repository_setHead = _Repository.prototype.setHead;\n_Repository.prototype.setHead = promisify(_Repository_setHead);\n\nvar _Repository_wrapOdb = _Repository.wrapOdb;\n_Repository.wrapOdb = promisify(_Repository_wrapOdb);\n\nvar _Reset = rawApi.Reset;\n\nvar _Reset_reset = _Reset.reset;\n_Reset.reset = promisify(_Reset_reset);\n\nvar _Reset_default = _Reset.default;\n_Reset.default = promisify(_Reset_default);\n\nvar _Reset_fromAnnotated = _Reset.fromAnnotated;\n_Reset.fromAnnotated = promisify(_Reset_fromAnnotated);\n\nvar _Revert = rawApi.Revert;\n\nvar _Revert_revert = _Revert.revert;\n_Revert.revert = promisify(_Revert_revert);\n\nvar _Revert_commit = _Revert.commit;\n_Revert.commit = promisify(_Revert_commit);\n\nvar _Revparse = rawApi.Revparse;\n\nvar _Revparse_single = _Revparse.single;\n_Revparse.single = promisify(_Revparse_single);\n\nvar _Revwalk = rawApi.Revwalk;\n\nvar _Revwalk_next = _Revwalk.prototype.next;\n_Revwalk.prototype.next = promisify(_Revwalk_next);\n\nvar _Revwalk_fastWalk = _Revwalk.prototype.fastWalk;\n_Revwalk.prototype.fastWalk = promisify(_Revwalk_fastWalk);\n\nvar _Revwalk_fileHistoryWalk = _Revwalk.prototype.fileHistoryWalk;\n_Revwalk.prototype.fileHistoryWalk = promisify(_Revwalk_fileHistoryWalk);\n\nvar _Signature = rawApi.Signature;\n\nvar _Signature_dup = _Signature.prototype.dup;\n_Signature.prototype.dup = promisify(_Signature_dup);\n\nvar _Signature_fromBuffer = _Signature.fromBuffer;\n_Signature.fromBuffer = promisify(_Signature_fromBuffer);\n\nvar _Stash = rawApi.Stash;\n\nvar _Stash_apply = _Stash.apply;\n_Stash.apply = promisify(_Stash_apply);\n\nvar _Stash_drop = _Stash.drop;\n_Stash.drop = promisify(_Stash_drop);\n\nvar _Stash_foreach = _Stash.foreach;\n_Stash.foreach = promisify(_Stash_foreach);\n\nvar _Stash_pop = _Stash.pop;\n_Stash.pop = promisify(_Stash_pop);\n\nvar _Stash_save = _Stash.save;\n_Stash.save = promisify(_Stash_save);\n\nvar _Status = rawApi.Status;\n\nvar _Status_foreach = _Status.foreach;\n_Status.foreach = promisify(_Status_foreach);\n\nvar _Status_foreachExt = _Status.foreachExt;\n_Status.foreachExt = promisify(_Status_foreachExt);\n\nvar _StatusList = rawApi.StatusList;\n\nvar _StatusList_getPerfdata = _StatusList.prototype.getPerfdata;\n_StatusList.prototype.getPerfdata = promisify(_StatusList_getPerfdata);\n\nvar _StatusList_create = _StatusList.create;\n_StatusList.create = promisify(_StatusList_create);\n\nvar _Strarray = rawApi.Strarray;\nvar _Submodule = rawApi.Submodule;\n\nvar _Submodule_addFinalize = _Submodule.prototype.addFinalize;\n_Submodule.prototype.addFinalize = promisify(_Submodule_addFinalize);\n\nvar _Submodule_addSetup = _Submodule.addSetup;\n_Submodule.addSetup = promisify(_Submodule_addSetup);\n\nvar _Submodule_addToIndex = _Submodule.prototype.addToIndex;\n_Submodule.prototype.addToIndex = promisify(_Submodule_addToIndex);\n\nvar _Submodule_foreach = _Submodule.foreach;\n_Submodule.foreach = promisify(_Submodule_foreach);\n\nvar _Submodule_init = _Submodule.prototype.init;\n_Submodule.prototype.init = promisify(_Submodule_init);\n\nvar _Submodule_location = _Submodule.prototype.location;\n_Submodule.prototype.location = promisify(_Submodule_location);\n\nvar _Submodule_lookup = _Submodule.lookup;\n_Submodule.lookup = promisify(_Submodule_lookup);\n\nvar _Submodule_open = _Submodule.prototype.open;\n_Submodule.prototype.open = promisify(_Submodule_open);\n\nvar _Submodule_repoInit = _Submodule.prototype.repoInit;\n_Submodule.prototype.repoInit = promisify(_Submodule_repoInit);\n\nvar _Submodule_resolveUrl = _Submodule.resolveUrl;\n_Submodule.resolveUrl = promisify(_Submodule_resolveUrl);\n\nvar _Submodule_setIgnore = _Submodule.setIgnore;\n_Submodule.setIgnore = promisify(_Submodule_setIgnore);\n\nvar _Submodule_setUpdate = _Submodule.setUpdate;\n_Submodule.setUpdate = promisify(_Submodule_setUpdate);\n\nvar _Submodule_setUrl = _Submodule.setUrl;\n_Submodule.setUrl = promisify(_Submodule_setUrl);\n\nvar _Submodule_status = _Submodule.status;\n_Submodule.status = promisify(_Submodule_status);\n\nvar _Submodule_sync = _Submodule.prototype.sync;\n_Submodule.prototype.sync = promisify(_Submodule_sync);\n\nvar _Submodule_update = _Submodule.prototype.update;\n_Submodule.prototype.update = promisify(_Submodule_update);\n\nvar _Tag = rawApi.Tag;\n\nvar _Tag_annotationCreate = _Tag.annotationCreate;\n_Tag.annotationCreate = promisify(_Tag_annotationCreate);\n\nvar _Tag_create = _Tag.create;\n_Tag.create = promisify(_Tag_create);\n\nvar _Tag_createLightweight = _Tag.createLightweight;\n_Tag.createLightweight = promisify(_Tag_createLightweight);\n\nvar _Tag_delete = _Tag.delete;\n_Tag.delete = promisify(_Tag_delete);\n\nvar _Tag_dup = _Tag.prototype.dup;\n_Tag.prototype.dup = promisify(_Tag_dup);\n\nvar _Tag_list = _Tag.list;\n_Tag.list = promisify(_Tag_list);\n\nvar _Tag_lookup = _Tag.lookup;\n_Tag.lookup = promisify(_Tag_lookup);\n\nvar _Tag_lookupPrefix = _Tag.lookupPrefix;\n_Tag.lookupPrefix = promisify(_Tag_lookupPrefix);\n\nvar _Time = rawApi.Time;\nvar _Transport = rawApi.Transport;\n\nvar _Transport_sshWithPaths = _Transport.sshWithPaths;\n_Transport.sshWithPaths = promisify(_Transport_sshWithPaths);\n\nvar _Tree = rawApi.Tree;\n\nvar _Tree_createUpdated = _Tree.prototype.createUpdated;\n_Tree.prototype.createUpdated = promisify(_Tree_createUpdated);\n\nvar _Tree_dup = _Tree.prototype.dup;\n_Tree.prototype.dup = promisify(_Tree_dup);\n\nvar _Tree_entryByPath = _Tree.prototype.entryByPath;\n_Tree.prototype.entryByPath = promisify(_Tree_entryByPath);\n\nvar _Tree_lookup = _Tree.lookup;\n_Tree.lookup = promisify(_Tree_lookup);\n\nvar _Tree_lookupPrefix = _Tree.lookupPrefix;\n_Tree.lookupPrefix = promisify(_Tree_lookupPrefix);\n\nvar _TreeEntry = rawApi.TreeEntry;\nvar _Treebuilder = rawApi.Treebuilder;\n\nvar _Treebuilder_insert = _Treebuilder.prototype.insert;\n_Treebuilder.prototype.insert = promisify(_Treebuilder_insert);\n\nvar _Treebuilder_create = _Treebuilder.create;\n_Treebuilder.create = promisify(_Treebuilder_create);\n\nvar _ConvenientPatch = rawApi.ConvenientPatch;\nvar _ConvenientPatch_hunks = _ConvenientPatch.prototype.hunks;\n_ConvenientPatch.prototype.hunks = promisify(_ConvenientPatch_hunks);\n\nvar _ConvenientHunk = rawApi.ConvenientHunk;\nvar _ConvenientHunk_lines = _ConvenientHunk.prototype.lines;\n_ConvenientHunk.prototype.lines = promisify(_ConvenientHunk_lines);\n/* jshint ignore:end */\n\n// Set the exports prototype to the raw API.\nexports.__proto__ = rawApi;\n\nvar importExtension = function importExtension(name) {\n  try {\n    require(\"./\" + name);\n  } catch (unhandledException) {\n    if (unhandledException.code != \"MODULE_NOT_FOUND\") {\n      throw unhandledException;\n    }\n  }\n};\n\n// Load up utils\nrawApi.Utils = {};\nrequire(\"./utils/lookup_wrapper\");\nrequire(\"./utils/normalize_options\");\nrequire(\"./utils/shallow_clone\");\nrequire(\"./utils/normalize_fetch_options\");\n\n// Load up extra types;\nrequire(\"./status_file\");\nrequire(\"./enums.js\");\n\n// Import extensions\nimportExtension(\"annotated_commit\");\nimportExtension(\"attr\");\nimportExtension(\"blame\");\nimportExtension(\"blame_hunk\");\nimportExtension(\"blame_options\");\nimportExtension(\"blob\");\nimportExtension(\"branch\");\nimportExtension(\"branch_iterator\");\nimportExtension(\"buf\");\nimportExtension(\"cert\");\nimportExtension(\"cert_hostkey\");\nimportExtension(\"cert_x509\");\nimportExtension(\"checkout\");\nimportExtension(\"checkout_options\");\nimportExtension(\"cherrypick\");\nimportExtension(\"cherrypick_options\");\nimportExtension(\"clone\");\nimportExtension(\"clone_options\");\nimportExtension(\"commit\");\nimportExtension(\"config\");\nimportExtension(\"config_entry\");\nimportExtension(\"config_entry\");\nimportExtension(\"cred\");\nimportExtension(\"cred_default\");\nimportExtension(\"cred_username\");\nimportExtension(\"cred_userpass_payload\");\nimportExtension(\"cvar_map\");\nimportExtension(\"describe_format_options\");\nimportExtension(\"describe_options\");\nimportExtension(\"describe_result\");\nimportExtension(\"diff\");\nimportExtension(\"diff_binary\");\nimportExtension(\"diff_binary_file\");\nimportExtension(\"diff_delta\");\nimportExtension(\"diff_file\");\nimportExtension(\"diff_find_options\");\nimportExtension(\"diff_hunk\");\nimportExtension(\"diff_line\");\nimportExtension(\"diff_options\");\nimportExtension(\"diff_perfdata\");\nimportExtension(\"diff_perfdata\");\nimportExtension(\"diff_stats\");\nimportExtension(\"error\");\nimportExtension(\"fetch\");\nimportExtension(\"fetch_options\");\nimportExtension(\"fetch_options\");\nimportExtension(\"filter\");\nimportExtension(\"filter\");\nimportExtension(\"filter_list\");\nimportExtension(\"giterr\");\nimportExtension(\"graph\");\nimportExtension(\"hashsig\");\nimportExtension(\"ignore\");\nimportExtension(\"index\");\nimportExtension(\"index_conflict_iterator\");\nimportExtension(\"index_entry\");\nimportExtension(\"index_time\");\nimportExtension(\"indexer\");\nimportExtension(\"libgit2\");\nimportExtension(\"mempack\");\nimportExtension(\"merge\");\nimportExtension(\"merge_driver_source\");\nimportExtension(\"merge_file_input\");\nimportExtension(\"merge_file_options\");\nimportExtension(\"merge_file_result\");\nimportExtension(\"merge_options\");\nimportExtension(\"merge_result\");\nimportExtension(\"message\");\nimportExtension(\"note\");\nimportExtension(\"note_iterator\");\nimportExtension(\"object\");\nimportExtension(\"odb\");\nimportExtension(\"odb_expand_id\");\nimportExtension(\"odb_object\");\nimportExtension(\"oid\");\nimportExtension(\"oid_shorten\");\nimportExtension(\"oidarray\");\nimportExtension(\"openssl\");\nimportExtension(\"packbuilder\");\nimportExtension(\"patch\");\nimportExtension(\"pathspec\");\nimportExtension(\"pathspec_match_list\");\nimportExtension(\"proxy\");\nimportExtension(\"proxy_options\");\nimportExtension(\"push\");\nimportExtension(\"push_options\");\nimportExtension(\"push_update\");\nimportExtension(\"rebase\");\nimportExtension(\"rebase_operation\");\nimportExtension(\"rebase_options\");\nimportExtension(\"refdb\");\nimportExtension(\"reference\");\nimportExtension(\"reflog\");\nimportExtension(\"reflog_entry\");\nimportExtension(\"refspec\");\nimportExtension(\"remote\");\nimportExtension(\"remote_callbacks\");\nimportExtension(\"remote_callbacks\");\nimportExtension(\"remote_head\");\nimportExtension(\"remote_head\");\nimportExtension(\"repository\");\nimportExtension(\"repository_init_options\");\nimportExtension(\"reset\");\nimportExtension(\"revert\");\nimportExtension(\"revert_options\");\nimportExtension(\"revparse\");\nimportExtension(\"revwalk\");\nimportExtension(\"signature\");\nimportExtension(\"smart\");\nimportExtension(\"stash\");\nimportExtension(\"stash_apply_options\");\nimportExtension(\"status\");\nimportExtension(\"status_entry\");\nimportExtension(\"status_list\");\nimportExtension(\"status_options\");\nimportExtension(\"strarray\");\nimportExtension(\"submodule\");\nimportExtension(\"submodule_update_options\");\nimportExtension(\"tag\");\nimportExtension(\"time\");\nimportExtension(\"trace\");\nimportExtension(\"transaction\");\nimportExtension(\"transfer_progress\");\nimportExtension(\"transport\");\nimportExtension(\"tree\");\nimportExtension(\"tree_entry\");\nimportExtension(\"tree_update\");\nimportExtension(\"treebuilder\");\nimportExtension(\"writestream\");\n/* jshint ignore:start */\n\n// Inherit directly from the original Cherrypick object.\n_Cherrypick.cherrypick.__proto__ = _Cherrypick;\n\n// Ensure we're using the correct prototype.\n_Cherrypick.cherrypick.prototype = _Cherrypick.prototype;\n\n// Assign the function as the root\nrawApi.Cherrypick = _Cherrypick.cherrypick;\n\n// Inherit directly from the original Clone object.\n_Clone.clone.__proto__ = _Clone;\n\n// Ensure we're using the correct prototype.\n_Clone.clone.prototype = _Clone.prototype;\n\n// Assign the function as the root\nrawApi.Clone = _Clone.clone;\n\n// Inherit directly from the original Merge object.\n_Merge.merge.__proto__ = _Merge;\n\n// Ensure we're using the correct prototype.\n_Merge.merge.prototype = _Merge.prototype;\n\n// Assign the function as the root\nrawApi.Merge = _Merge.merge;\n\n// Inherit directly from the original Reset object.\n_Reset.reset.__proto__ = _Reset;\n\n// Ensure we're using the correct prototype.\n_Reset.reset.prototype = _Reset.prototype;\n\n// Assign the function as the root\nrawApi.Reset = _Reset.reset;\n\n// Inherit directly from the original Revert object.\n_Revert.revert.__proto__ = _Revert;\n\n// Ensure we're using the correct prototype.\n_Revert.revert.prototype = _Revert.prototype;\n\n// Assign the function as the root\nrawApi.Revert = _Revert.revert;\n\n/* jshint ignore:end */\n\n// Wrap asynchronous methods to return promises.\npromisify(exports);\n\n// Set version.\nexports.version = require(\"../package\").version;\n\n// Expose Promise implementation.\nexports.Promise = Promise;"}